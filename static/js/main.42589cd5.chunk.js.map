{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","activeTab","find","tab","id","className","map","cn","onClick","tabId","selectedTab","handleClickOnTab","href","title","content","App","useState","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"8LASaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAYH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GAYrE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAH,GAAG,OACX,oBAEE,UAAQ,MACRE,UAAWE,IACT,CACE,YAAaJ,IAAQF,IAL3B,SASE,mBACEO,QAAS,kBAzBE,SAACC,GACxB,GAAIR,EAAUG,KAAOK,EAAO,CAC1B,IAAMC,EAAcZ,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOK,KAE5CC,GACFV,EAAcU,IAoBSC,CAAiBR,EAAIC,KACpCQ,KAAI,WAAMT,EAAIC,IACd,UAAQ,UAHV,SAKGD,EAAIU,SAbFV,EAAIC,WAoBjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,gBACGJ,QADH,IACGA,OADH,EACGA,EAAWa,cC9CPhB,G,kBAAc,CACzB,CAAEM,GAAI,QAASS,MAAO,QAASC,QAAS,eACxC,CAAEV,GAAI,QAASS,MAAO,QAASC,QAAS,eACxC,CAAEV,GAAI,QAASS,MAAO,QAASC,QAAS,iBAG7BC,EAAgB,WAC3B,MAAsCC,mBAASlB,EAAK,IAApD,mBAAOY,EAAP,KAAoBO,EAApB,KAEA,OACE,sBAAKZ,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBK,EAAYG,SAGlC,cAAC,EAAD,CACEf,KAAMA,EACNC,cAAeW,EAAYN,GAC3BJ,cAAeiB,QCtBvBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.42589cd5.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { Tab } from '../../Types/Tab';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (a: Tab) => void,\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const activeTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  const handleClickOnTab = (tabId: string) => {\n    if (activeTab.id !== tabId) {\n      const selectedTab = tabs.find(tab => tab.id === tabId);\n\n      if (selectedTab) {\n        onTabSelected(selectedTab);\n      }\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n              data-cy=\"Tab\"\n              className={cn(\n                {\n                  'is-active': tab === activeTab,\n                },\n              )}\n            >\n              <a\n                onClick={() => handleClickOnTab(tab.id)}\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {activeTab?.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Tabs } from './components/Tabs';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tab } from './Types/Tab';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={setSelectedTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}